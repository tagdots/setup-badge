---

name: cron-tasks

on:
  schedule:
    - cron: '30 3 * * 0'

  workflow_dispatch:

env:
  PYTHON_VERSION: '3.12.x'

permissions:
    actions: read
    contents: read
    issues: read
    pull-requests: read

jobs:
  badge-demo:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - id: demo-badge
      uses: tagdots/setup-badge-action@3989b8b5c1c81c961b76d125c8ea50fc7739d9cf # 1.0.0

  badge-language:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - id: language-badge
      uses: tagdots/setup-badge-action@3989b8b5c1c81c961b76d125c8ea50fc7739d9cf # 1.0.0
      with:
        badge-name: language
        label: Language
        message: Python
        message-color: FFA500

  badge-license:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - id: license-badge
      uses: tagdots/setup-badge-action@3989b8b5c1c81c961b76d125c8ea50fc7739d9cf # 1.0.0
      with:
        badge-name: license
        badge-url: https://raw.githubusercontent.com/tagdots-dev/python-test/refs/heads/main/LICENSE
        label: License
        message: MIT
        message-color: FFA500

  badge-coverage:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    outputs:
      COV_PER: ${{ steps.get-coverage-results.outputs.COV_PER }}
      COV_RUN: ${{ steps.get-coverage-results.outputs.COV_RUN }}

    steps:
    - id: checkout-source-code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # 4.2.2

    - id: setup-Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - id: install-python-deps
      run: make test-install

    - id: coverage-run
      env:
        PYTHONUNBUFFERED: "1"
      run: make test

    - id: get-coverage-results
      run: |
        # get coverage results
        echo "COV_RUN=${{ steps.run-coverage.outcome }}"                  >> "$GITHUB_OUTPUT"
        echo "COV_PER=$(coverage report | grep TOTAL | awk '{print $6}')" >> "$GITHUB_OUTPUT"

    - id: upload-coverage
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: coverage
        path: htmlcov/
        if-no-files-found: error
        retention-days: 1
        overwrite: true
        compression-level: 6

    - id: coverage-badge
      uses: tagdots/setup-badge-action@3989b8b5c1c81c961b76d125c8ea50fc7739d9cf # 1.0.0
      with:
        badge-name: coverage
        badge-url: https://github.com/tagdots-dev/python-test/actions/workflows/cron-badges.yaml
        label: "Code Coverage"
        message: "${{ steps.get-coverage-results.outputs.COV_PER }}"

  badge-marketplace:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - id: marketplace-badge
      uses: tagdots/setup-badge-action@3989b8b5c1c81c961b76d125c8ea50fc7739d9cf # 1.0.0
      with:
        badge-name: marketplace
        badge-url: https://github.com/marketplace/actions/setup-badge-action
        label: Marketplace
        message: setup-badge-action
        message-color: FF6360

  stale-workflows: # https://github.com/Mattraks/delete-workflow-runs
    runs-on: ubuntu-latest

    permissions:
      contents: read
      actions: write

    steps:
    - name: Run stale-workflows
      id: stale-workflows
      uses: Mattraks/delete-workflow-runs@39f0bbed25d76b34de5594dceab824811479e5de # v2.0.6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 5
        keep_minimum_runs: 8

  stale-issues-prs: # https://github.com/actions/stale
    runs-on: ubuntu-latest

    permissions:
      actions: write
      contents: write
      issues: write
      pull-requests: write

    steps:
    - name: Run stale-issues-prs
      id: stale-issues-prs
      uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0
      with:
        stale-issue-message: 'This issue is stale because it has been open 5 days with no activity. Remove stale label or comment or this will be closed in 3 days after stale'
        days-before-stale: 5
        days-before-close: 3
        operations-per-run: 40

  stale-branches: # https://github.com/crs-k/stale-branches
    runs-on: ubuntu-latest

    permissions:
      issues: write
      contents: write
      pull-requests: read

    steps:
    - name: Run stale-branches
      id: stale-branches
      uses: crs-k/stale-branches@de68d9358068be991f64ad9058487e2484925d9a # v8.2.1
      with:
        # days-before-stale cannot be greater than or equal to days-before-delete
        branches-filter-regex: '^((?!main|badge))'
        days-before-stale: 4
        days-before-delete: 6
        include-protected-branches: true
        pr-check: true
        repo-token: ${{ secrets.GITHUB_TOKEN }}

  update-pre-commit: # https://github.com/tagdots/update-pre-commit-action
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Run update-pre-commit
      id: update-pre-commit
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: tagdots/update-pre-commit-action@0da91de0a91c4d24cac35b8576fba69e7abc2365 # 1.0.16
      with:
        file: .pre-commit-config.yaml
        dry-run: false
        open-pr: true

  notify-slack:
    if: always()
    needs: [badge-demo, badge-license, badge-language, badge-coverage, badge-marketplace, stale-workflows, stale-issues-prs, stale-branches, update-pre-commit]

    runs-on: ubuntu-latest

    outputs:
      WORKFLOW_RESULT: ${{ steps.get-previous-jobs-results.outputs.WORKFLOW_RESULT }}

    steps:

    - name: Get Overall Jobs Results
      id: get-overall-jobs-results
      shell: bash
      run: |
        # get overall result from all of the previous jobs
        if "${{ needs.badge-demo.result == 'success' && needs.badge-license.result == 'success' && needs.badge-language.result == 'success' && needs.badge-coverage.result == 'success' && needs.badge-marketplace.result == 'success' && needs.stale-workflows.result == 'success' && needs.stale-issues-prs.result == 'success' && needs.stale-branches.result == 'success' && needs.update-pre-commit.result == 'success' }}"; then
          echo "WORKFLOW_RESULT=:white_check_mark:" >> "$GITHUB_OUTPUT"
        else
          echo "WORKFLOW_RESULT=:no_entry:" >> "$GITHUB_OUTPUT"
        fi

    - name: Post message to Slack
      uses: slackapi/slack-github-action@91efab103c0de0a537f72a35f6b8cda0ee76bf0a # v2.1.1
      with:
        method: chat.postMessage
        token: "${{ secrets.SECRET_SLACK_APP_GITHUB_BOT }}"
        payload: |
          channel: "${{ secrets.SECRET_SLACK_CHANNEL_CRON_TASKS }}"
          text: "
              *Repository: ${{ github.repository }}*\n
              *Workflow : ${{ github.workflow }} ${{ steps.get-overall-jobs-results.outputs.WORKFLOW_RESULT }}*
              ```
              URL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\n
              Job: badge-demo        - ${{ needs.badge-demo.result }}\n
              Job: badge-license     - ${{ needs.badge-license.result }}\n
              Job: badge-language    - ${{ needs.badge-language.result }}\n
              Job: badge-coverage    - ${{ needs.badge-coverage.result }}\n
              Job: badge-marketplace - ${{ needs.badge-marketplace.result }}\n
              Job: stale-workflows   - ${{ needs.stale-workflows.result }}\n
              Job: stale-issues-prs  - ${{ needs.stale-issues-prs.result }}\n
              Job: stale-branches    - ${{ needs.stale-branches.result }}\n
              Job: update-pre-commit - ${{ needs.update-pre-commit.result }}
              ```"
